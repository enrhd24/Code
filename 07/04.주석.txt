### Content

- 주석의 법칙
1. 나쁜 코드를 보완하지 못한다.
2. 코드로 의도를 표현하라
3. 좋은 주석
4. 나쁜 주석

---

### 주석의 법칙

- 요상한 주석은 코드 이해하기 어렵다.
- 나쁜 코드에 주석을  달지 말자
- 프로그래밍 언어로 의도를 표현한다면 달지 말라
- 자신을 표현할 방법이 없을 때 사용하는 것이다.
- 주석을 유지 보수하는 것은 현실적으로 어렵다.
- 코드를 깔끔하게 정리하고 표현력을 강화하면 필요 없다.
- 정보를 제공하는 유일한 출처이다.
- 생각보다 주석으로 많은 정보를 담지 못한다.
- 함수에 주석을 다는 것보단 이름 만으로 의도 파악 가능
// 가능한 주석은 줄이도록 노력해야 한다.

### 나쁜 코드를 보완하지 못한다.

- 주석을 추가하는 이유는 코드 품질이 나쁜거다.

### 코드로 의도를 표현하라

- 코드를 훌륭한 수단이 아니라는 의미로 해석한다.

### 좋은 주석

- 회사가 정립한 구현 표준에 맞춰 법적인 이유로 주석을 하는 경우
- 저작권 정보나 소유권 정보를 주석으로 사용하는 경우
1. 의도를 설명하는 주석 : 자신이 이 코드를 통해 무엇을 만들 것인가
2. 의미를 명료하게 밝히는 주석 : 모호한 인수나 반환 값을 의미를 적을 경우
3. 결과를 경고하는 주석 : 경고할 목적으로 주석을 사용하는 경우
4. TODO 주석 : 앞으로 할 일을 남기는 주석의 경우
5. 중요성을 강조 하는 주석 : 중요성을 강조하기 위해 사용하는 경우
6. 공개 AP에서 Javadocs : 오픈소스에 나와있는 문서의 주석

### 나쁜 주석

1. 주절거리는 주석 : 특별한 이유 없이 의무감으로 적는 경우
2. 같은 이야기를 중복 하는 주석 : 코드보다 주석 읽는 시간이 오래 걸리는 경우
3. 오해할 여지가 있는 주석 : 코드가 돌아가는 이유를 찾느라 고생하는 경우
4. 의무적으로 다는 주석 : 코드를 복잡하게 하고, 거짓말을 남겨 혼동을 동반하는 경우
5. 이력을 기록하는 주석 : 예전에는 바람직했으나 지금은 혼란만 만드는 경우
6. 있으나 마나 한 주석 : 새로운 정보를 제공하지 못하는 경우
7. 무서운 잡음 : 주석을 통해 어떠한 목적을 수행할 수 없는 경우
8. 닫는 괄호에 다는 주석 : 작고 캡슐과 된 함수에는 잡음인 경우
9. 주석으로 처리한 코드 : 예전에는 유용했지만, 소스 코드 관리 시스템이 대신한다.
10. HTML 주석 : 프로그래머가 하는 것이 아닌 도구가 가져가야 하는 경우
11. 전역 정보 : 바로 아래 함수가 아닌 시스템 어딘가 에 있는 다른 함수를 설명한다는 말
12. 너무 많은 정보 : RFC번호를 제외하면 독자에서 불필요한 경우
13. 모호한 관계 : 주석과 코드의 관계 명백하지 않은 경우
14. 함수 헤더 : 이름을 잘 붙인 함수가 주석보다 보다 좋은 경우
15. 비공개 코드 : 주석으로 인해 코드만 보기 싫어지는 경우

---

### 정리의 시간

- 주석이 중복이라고 주장하기 쉽다.
- 주석으로서의 확실히 필요하다.
- 제곱근은 c 및 어셈 프로그래머에게는 만족스러운 해법이다.