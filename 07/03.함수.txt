### Content
1. 작게 만들어라
2. 한 가지만 해라
3. 함수 당 추상화 수준은 하나로
4. Switch 문
5. 서술적인 이름을 사용하라
6. 함수 인수
7. 부수 효솨를 일으키지 마라
8. 명령과 조회를 분리하라
9. 오류 코드보다 예외를 사용하라
10. 반복하지 마라
11. 함수를 어떻게 짜죠

---

### 함수의 법칙(function)

- 가장 기본적인 단위
- 의도를 분명히 표현하는 함수
- 내부를 직관적으로 파악

### 함수의 역할

- 버퍼 생성
- 페이지를 가져옴
- 상속된 페이지를 검색
- 경로를 헨더링한다.
- HTML을 생성한다.
- 불가사의한 문자열을 덧붙인다.

### 함수의 탄생 배경

- 추상화 수준에서 여러 단계로 나눠 수행하기 위함.

---

### 작게 만들어라

- 더 좋다는 증거나 자료를 제시하기 어려움
- 블록과 들여쓰기는 한 줄이어야 한다.
- 함수를 읽고 이해하기 쉬워지는 장점이 있다.

### 한 가지만 해라

- 함수는 여러가지를 처리한다.
- 의미 있는 이름으로 다른 함수를 추출하기
- 자연스럽게 섹션으로 나누기 어렵게 하자

### 함수 당 추상화 수준은 하나로

- 모든 문자의 추상화 수준이 동일해야 한다.
- 근본 개념과 세부사항을 뒤섞이면, 세부사항이 점점 추가된다.
- 책을 읽는 것 처럼 구현하면 일관되게 유지하기 쉽다.

### Switch문

- 단일 블록이나 함수를 선로한다.
- 다형성을 이용하여 한가지 작업만 수행한다.
- 다형성으르ㅗ 인해 파생 클래스의 함수가 실행된다.

### 서술적인 이름을 사용하라

- 함수가 작고 단순할수록 서술적인 이름을 고르기 쉽다.
- 함수 기능을 잘 표현하는이름을 선택한다.
- 설계가 뚜렵해지므로 코드를 개선하기 쉬워진다.
- 문체가 비슷하면 이야기를 순차적으로 플어가기 쉽다.

### 함수 인수

- 입력인수가 없거나, 한개만 사용하는 걸 권고한다.
- 단항 함수 형식은 이벤트이다.
- 변환 함수 형식을 따르는 이유는 형태를 유지하기 때문이다.
- 플래그 인수는 여러 가지를 처리한다고 말하는 형태이다.
- 이항 함수는 좌표계함수로 사용되고, 위험이 따른다는 사실일 기억하자
- 삼항 함수는 여전히 주춤하게 되지만 그만한 가치가 잇다.
- 인구 객체는 독자적인 클래스 변수로 선언할 가능성이 높다.
- 인수 목록은 가변 인수를 취하는 모든 함수에 같은 원리가 적용된다.
- 동사와 키워드는 인수의 순서와 의도를 제대로 표현할 대 필수 이다.

### 부수 효과를 일으키지 마라

- 많은 경우 시간적인 결합이나 순서 종속성을 초래한다.
- 시간적인 결합이 필요하면 함수 이름에 분명히 명시해야한다.
- 출력인수는 함수 입력으로 해석한다.
- 출력인수보다는 함수가 속한 객체 상태를 변경하는 방식을 사용하자

### 명령과 조회를 분리하라

- 객체 상태를 변경하거나 객체 정보를 반환하거나 둘중 하나다.
- 명령과 조회를 분리하여 혼란을 애초에 뿌리뽑는 방법이다.

### 오류 코드보다 예외를 사용하라고

- 동사/형용사 혼란을 일으키지 않는 대신 여러 단계로 중첩되는 코드를 야기한다.
- Try/Catch는 정상 동작과 오류 처리동작을 구분짓는 역할을 한다.
- 코드를 이해하고 수정하기 쉬워지는 장점이 있다.
- 오류를 처리하는 함수는 한가지 작업으로 try~catch/finally문으로 끝나기
- Error.java의존성 자석은 오류 코드를 정의 하여 예외 클래스를 추가한다.

### 반복하지 마라

- 코드 길이 늘어나고 알고리즘이 변하면 중복으로 손을 봐야 한다.
- 어느 한 곳이라도 오류가 발생할 활률도 놓아지는 효과를 본다.
- 중복을 제거할 목적으로 관계형 데이터베이스에 정규 형식을 만든다.
- 객체 지향 프로그래밍, 구조적 프로그래밍 들이 중복 제거를 위한 노력이다.

### 함수를 어떨게 짜죠

- 소프트웨어를 자는 행위는 글짓기와 비슷하다.
- 초안은 서투르고 어수선하며 읽힐 때까지 다듬고 고치고 문단을 정리한다.
- 처음에는 이름을 즉흥적이고 코드는 중복된다.
- 단위테스트를 통해 서투른 코드를 고치고 함수,이름,중복,메서드를 줄인다.
- 전체 클래스를 쪼개어 항상 단위테스트를 통과하는 상태로 만든다.

---

### 정리의 시간

- 특정 응용 분야 시스템을 기술할 목적으로 프로그래머는 설계한다.
- 함수는 그 언어에서 동사이며, 클래스는 명사이다.
- 요구사항 문서에 나오는 명사와 동사는 항상 나오는 후보이다.
- 프로그래밍 언어는 풍부하고 표현력이 강안 언어를 통해 이야기를 풀어간다.
- 규칙을 통하여 체계가 잡힌 함수가 나오길 기대하고 잇다.
- 정확한 언어로 깔끔하게 맞아 떨어져야 이야기를 풀어가기가 쉬워진다.